/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pos.application;

import javax.swing.JOptionPane;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Random;


/**
 *
 * @author chris
 */
public class loginPage extends javax.swing.JFrame {

    /**
     * Creates new form loginPage
     */
    public loginPage() {
        DBConnector.initDBConnection();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        userIDLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        userIDTextField = new javax.swing.JTextField();
        loginButton = new javax.swing.JButton();
        registerBTN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(247, 202, 201));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(50, 27, 11));
        jPanel1.setForeground(new java.awt.Color(33, 158, 188));

        userIDLabel.setFont(new java.awt.Font("Montserrat ExtraBold", 0, 12)); // NOI18N
        userIDLabel.setForeground(new java.awt.Color(255, 255, 255));
        userIDLabel.setText("Username");

        passwordLabel.setFont(new java.awt.Font("Montserrat ExtraBold", 0, 12)); // NOI18N
        passwordLabel.setForeground(new java.awt.Color(255, 255, 255));
        passwordLabel.setText("Password");
        passwordLabel.setToolTipText("");

        passwordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordTextFieldActionPerformed(evt);
            }
        });

        userIDTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userIDTextFieldActionPerformed(evt);
            }
        });

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        registerBTN.setText("Register");
        registerBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBTNActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Swis721 BlkCn BT", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("LOGIN");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 53, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(userIDLabel)
                    .addComponent(passwordLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(registerBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(50, 50, 50))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(43, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userIDLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLabel))
                .addGap(44, 44, 44)
                .addComponent(loginButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        try{
            String username = userIDTextField.getText();
            String password = passwordTextField.getText();
            String passwordHashLogin = String.valueOf(password.hashCode());
            String userType = "";
            
            Statement stmt = DBConnector.connection.createStatement();
            //queries
            String sql = "select * from users where username='"+username+"'and password='"+passwordHashLogin+"'";
            ResultSet rs = stmt.executeQuery(sql);
            if(rs.next()){
                // Retrieve the user_type from the ResultSet                
                userType = rs.getString("user_type");
        
                // Redirect the user based on user_type
                if (userType.equals("admin")) {
                    this.dispose();
                    new adminPage().setVisible(true);
                } 
                else if (userType.equals("user")) {
                    this.dispose();
                    new menuJFrame().setVisible(true);
                } 
            }
            else if(username.equals("") && password.equals("")){
                JOptionPane.showMessageDialog(null, "Username dan Password Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else if(username.equals("")){
                JOptionPane.showMessageDialog(null, "Username Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else if(password.equals("")){
                JOptionPane.showMessageDialog(null, "Password Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Username dan Password yang anda masukkan salah!", "Caution!", JOptionPane.WARNING_MESSAGE);   
            }
        }
        catch(Exception ex){
            System.out.println(ex);
        }           
    }//GEN-LAST:event_loginButtonActionPerformed

    private void userIDTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userIDTextFieldActionPerformed
        try{
            String username = userIDTextField.getText();
            String password = passwordTextField.getText();
            String passwordHashLogin = String.valueOf(password.hashCode());
            String userType = "";
            
            Statement stmt = DBConnector.connection.createStatement();
            //queries
            String sql = "select * from users where username='"+username+"'and password='"+passwordHashLogin+"'";
            ResultSet rs = stmt.executeQuery(sql);
            if(rs.next()){
                // Retrieve the user_type from the ResultSet                
                userType = rs.getString("user_type");
                this.dispose();
        
                // Redirect the user based on user_type
                if (userType.equals("admin")) {
                    new adminPage().setVisible(true);
                } 
                else if (userType.equals("user")) {
                    new tesframe().setVisible(true);
                } 
            }
            else if(username.equals("") && password.equals("")){
                JOptionPane.showMessageDialog(null, "Username dan Password Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else if(username.equals("")){
                JOptionPane.showMessageDialog(null, "Username Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else if(password.equals("")){
                JOptionPane.showMessageDialog(null, "Password Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Username dan Password yang anda masukkan salah!", "Caution!", JOptionPane.WARNING_MESSAGE);   
            }
        }
        catch(Exception ex){
            System.out.println(ex);
        }           
    }//GEN-LAST:event_userIDTextFieldActionPerformed

    private void passwordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordTextFieldActionPerformed
        try{
            String username = userIDTextField.getText();
            String password = passwordTextField.getText();
            String passwordHashLogin = String.valueOf(password.hashCode());
            String userType = "";
            
            Statement stmt = DBConnector.connection.createStatement();
            //queries
            String sql = "select * from users where username='"+username+"'and password='"+passwordHashLogin+"'";
            ResultSet rs = stmt.executeQuery(sql);
            if(rs.next()){
                // Retrieve the user_type from the ResultSet                
                userType = rs.getString("user_type");
                this.dispose();
        
                // Redirect the user based on user_type
                if (userType.equals("admin")) {
                    new adminPage().setVisible(true);
                } 
                else if (userType.equals("user")) {
                    new tesframe().setVisible(true);
                } 
            }
            else if(username.equals("") && password.equals("")){
                JOptionPane.showMessageDialog(null, "Username dan Password Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else if(username.equals("")){
                JOptionPane.showMessageDialog(null, "Username Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else if(password.equals("")){
                JOptionPane.showMessageDialog(null, "Password Tidak Boleh Kosong!", "Caution!", JOptionPane.WARNING_MESSAGE);
                
            }
            else{
                JOptionPane.showMessageDialog(null, "Username dan Password yang anda masukkan salah!", "Caution!", JOptionPane.WARNING_MESSAGE);   
            }
        }
        catch(Exception ex){
            System.out.println(ex);
        }           
    }//GEN-LAST:event_passwordTextFieldActionPerformed

    private void registerBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBTNActionPerformed
        new register().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_registerBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton registerBTN;
    private javax.swing.JLabel userIDLabel;
    private javax.swing.JTextField userIDTextField;
    // End of variables declaration//GEN-END:variables
}
